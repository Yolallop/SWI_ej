🔹 Opción 1: database.games como un objeto (usa Object.values() para buscar)
En este caso, los juegos están guardados en un objeto, donde las claves son los identificadores (id).

javascript

const database = {
    games: {
        1: { id: 1, name: "Catan", genre: "Estrategia" },
        2: { id: 2, name: "Monopoly", genre: "Finanzas" },
        3: { id: 3, name: "Uno", genre: "Cartas" }
    }
};
🔍 Cómo buscar un juego por nombre en esta estructura:
javascript

const gameName = "Catan";
const game = Object.values(database.games).find(g => g.name === gameName);

console.log(game);
📌 Salida:

javascript

{ id: 1, name: "Catan", genre: "Estrategia" }
✅ Se necesita Object.values() para convertir el objeto en un array y poder buscar con .find().

🔹 Opción 2: database.games como un array (NO necesita Object.values())
En este caso, los juegos están guardados en un array, lo cual es más fácil para recorrer y buscar.

javascript

const database = {
    games: [
        { id: 1, name: "Catan", genre: "Estrategia" },
        { id: 2, name: "Monopoly", genre: "Finanzas" },
        { id: 3, name: "Uno", genre: "Cartas" }
    ]
};
🔍 Cómo buscar un juego por nombre en esta estructura:
javascript

const gameName = "Catan";
const game = database.games.find(g => g.name === gameName);

console.log(game);
📌 Salida:

javascript

{ id: 1, name: "Catan", genre: "Estrategia" }
✅ NO necesitas Object.values() porque database.games ya es un array y .find() funciona directamente.







ARRAY

var express = require('express');
var router = express.Router();
const database = require('../database'); // Asegúrate de que este módulo contiene la lista de juegos

// Ruta GET para buscar juego por nombre
router.get('/:name', (req, res) => {
    const gameName = req.params.name;

    // Buscamos directamente en el array de juegos
    const game = database.games.find(g => g.name === gameName);

    if (!game) {
        return res.status(404).send('Juego no encontrado');
    }

    res.render('gamesDetail', { 
        title: 'Detalles del Juego',
        game: game,
        user: req.session.user
    });
});

module.exports = router;



OBJETO 

var express = require('express');
var router = express.Router();
const database = require('../database'); // Asegúrate de que este módulo contiene la lista de juegos

// Ruta GET para buscar juego por nombre
router.get('/:name', (req, res) => {
    const gameName = req.params.name;

    // Convertimos el objeto en un array y buscamos por nombre
    const game = Object.values(database.games).find(g => g.name === gameName);

    if (!game) {
        return res.status(404).send('Juego no encontrado');
    }

    res.render('gamesDetail', { 
        title: 'Detalles del Juego',
        game: game,
        user: req.session.user
    });
});

module.exports = router;
----------------------------------------------------------------------------------------------------------------------------------------------

OBJETO  
const game = {
    data: {
        1: { id: 1, name: "Catan", genre: "Estrategia" },
        2: { id: 2, name: "Monopoly", genre: "Finanzas" },
        3: { id: 3, name: "Uno", genre: "Cartas" }
    }

console.log(game.data[1]); // { id: 1, name: "Catan", genre: "Estrategia" }
console.log(game.data[2]); // { id: 2, name: "Monopoly", genre: "Finanzas" }
console.log(game.data[3]); // { id: 3, name: "Uno", genre: "Cartas" }

};
// Definir el nuevo juego
const newGame = { id: 4, name: "Risk", genre: "Estrategia" };

// Agregarlo a game.data con una nueva clave numérica
game.data[4] = newGame;

console.log(game.data);
------------------------------------------------------------------------------------------------------------------------------------------------------------
router.post('/add', (req, res) => {
    const { name, genre } = req.body; // Obtenemos el nombre y género desde la solicitud

    if (!name || !genre) {
        return res.status(400).send('Faltan datos');
    }

    // Obtener un nuevo ID automáticamente (máximo ID actual + 1)
    const newId = Math.max(...Object.keys(game.data).map(Number)) + 1;

    // Crear el nuevo juego
    const newGame = { id: newId, name, genre };

    // Agregarlo a game.data
    game.data[newId] = newGame;

    res.status(201).send({ message: "Juego añadido", game: newGame });
});
------------------------------------------------------------------------------------------------------------------------------------------------------------
router.get('/id/:id', (req, res) => {
    const gameId = req.params.id; // Obtenemos el ID de la URL

    // Accedemos directamente a game.data usando el ID
    const game = game.data[gameId];

    if (!game) {
        return res.status(404).send('Juego no encontrado');
    }

    res.render('gamesDetail', { 
        title: 'Detalles del Juego',
        game: game,
        user: req.session.user
    });
});


